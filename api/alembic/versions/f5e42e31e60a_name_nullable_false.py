"""Name nullable-false

Revision ID: f5e42e31e60a
Revises: 87e0fb310492
Create Date: 2025-04-16 08:48:50.130583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5e42e31e60a'
down_revision: Union[str, None] = '87e0fb310492'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def alter_column_in_sqlite(table_name, column_name, new_type, nullable):
    # Step 1: Create a new table with the desired schema
    new_table_name = f"new_{table_name}"
    op.create_table(
        new_table_name,
        sa.Column('id', sa.Integer, primary_key=True),  # Adjust according to your schema
        sa.Column(column_name, new_type, nullable=nullable),
        # Add other columns as needed, ensuring to match the original table's schema
    )

    # Step 2: Copy data from the old table to the new table
    op.execute(f"INSERT INTO {new_table_name} (id, {column_name}) SELECT id, {column_name} FROM {table_name}")

    # Step 3: Drop the old table
    op.drop_table(table_name)

    # Step 4: Rename the new table to the original table name
    op.rename_table(new_table_name, table_name)

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('accounts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('categories_incomes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('expenses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('expenses_categories', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('incomes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('places', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('savings', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('sources', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('sources', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('savings', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('places', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('incomes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('expenses_categories', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('expenses', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('categories_incomes', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('accounts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
